EmitPerSecond = 0
EmitPerOneShot = 0
Initializers
[
	{
		Type = LocationToWorldSpace
		LocationIn = location
		LocationOut = location
		Name = "Convert location to world space."
		Enabled = true
		UpdateAfterInit = false
	}
	{
		Type = VelocityToWorldSpace
		VelocityIn = base_velocity
		VelocityOut = base_velocity
		Name = "Convert velocity to world space"
		Enabled = true
		UpdateAfterInit = false
	}
	{
		Type = AddFrameOfReference
		Name = "Add frame of reference"
		VelocityInOut = inherited_velocity
		Enabled = true
		UpdateAfterInit = false
	}
]
Updaters
[
	{
		Type = Lifetime
		LifeInOut = life
		Lifetime = 1
		Name = Lifetime
		Enabled = true
		UpdateAfterInit = false
	}
	{
		Type = OperatorConst
		DataType = Vector2D
		AIn = life
		BIn = velocity
		ResultOut = vel_lerp_t
		Operator = Multiply
		Name = "Velocity lerp T"
		Enabled = false
		UpdateAfterInit = false
		LerpIn = life
		DataOut = velocity
		Invert = false
		ValueType = Float
		FromValue
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 1
			X = 1
			Y = 1
		}
		ToValue
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 0
			X = 0
			Y = 0
		}
		Value = 1.3
	}
	{
		Type = OperatorConst
		DataType = Vector2D
		AIn = vel_lerp_t
		BIn = base_velocity
		ResultOut = vel_lerp_t
		Operator = Min
		Name = "Velocity lerp T limit"
		Enabled = false
		UpdateAfterInit = false
		LerpIn = life
		DataOut = color
		Invert = false
		ValueType = Float
		FromValue
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 1
		}
		ToValue
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 0
		}
		Value = 1
	}
	{
		Type = Lerp
		LerpIn = life
		ColorOut = color
		Invert = false
		Colors
		[
			{
				Rf = 1
				Gf = 1
				Bf = 1
				Af = 0
			}
			{
				Rf = 1
				Gf = 1
				Bf = 1
				Af = 1
			}
			{
				Rf = 1
				Gf = 1
				Bf = 1
				Af = 0.498039216
			}
			{
				Rf = 1
				Gf = 1
				Bf = 1
				Af = 0
			}
		]
		Name = "Velocity lerp"
		Enabled = true
		UpdateAfterInit = true
		DataType = Vector2D
		AIn = location
		BIn = velocity
		ResultOut = location
		Operator = AddDt
		DataOut = velocity
		ValueType = Vector2D
		FromValue
		{
			X = 1
			Y = 1
		}
		ToValue
		{
			X = 0
			Y = 0
		}
	}
	{
		Type = Operator
		DataType = Vector2D
		AIn = velocity
		BIn = base_velocity
		ResultOut = velocity
		Operator = Multiply
		Name = "Apply base velocity"
		Enabled = true
		UpdateAfterInit = false
		LerpIn = life
		DataOut = scale
		Invert = false
		ValueType = Float
		FromValue = 1
		ToValue = 0
	}
	{
		Type = Operator
		DataType = Vector2D
		AIn = location
		BIn = velocity
		ResultOut = location
		Operator = AddDt
		Name = "Apply velocity."
		Enabled = true
		UpdateAfterInit = false
	}
	{
		Type = Operator
		LerpIn = life
		DataOut = scale
		Invert = false
		ValueType = Float
		FromValue = 1
		ToValue = 0
		Name = "Apply inherited velocity"
		Enabled = true
		UpdateAfterInit = false
	DataType=Vector2D;AIn=location;BIn=inherited_velocity;ResultOut=location;Operator=AddDt;}
{Type=Lerp;LerpIn=life;DataOut=scale;Invert=false;ValueType=Float;FromValue=1;ToValue=0;Name="Scale lerp";Enabled=true;UpdateAfterInit=true;}]
Renderer
{
	Type = StandardQuadRenderer
	LocationIn = location
	ScaleIn = scale
	RotationIn
	ColorIn = color
	UvRectIn
	BaseSize
	{
		X = 0.75
		Y = 0.75
	}
	MaxScale = 1
	Name = ""
}
Material
{
	Texture
	{
		File = spark.png
		FixTransparentColors = false
		PreMultiplyByAlpha = false
		SampleMode = Linear
		MipLevels = max
	}
	TargetBlendMode
	{
		SourceRgbFactor = SourceAlpha
		DestRgbFactor = One
		RgbOperator = Add
		SourceAlphaFactor = InverseDestAlpha
		DestAlphaFactor = One
		AlphaOperator = Add
		ChannelWriteMask
		[
			None
			Red
			Green
			Blue
			Alpha
			All
		]
	}
}
DeleteMode = KeepOrder
EnableMultithreading = false
InitCapacity=2500;
