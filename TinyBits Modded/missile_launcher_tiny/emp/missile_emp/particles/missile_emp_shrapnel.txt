Type = Particles
Def
{
	EmitPerSecond = 0
	EmitPerOneShot = 0
	Initializers
	[
		{
			Type = SetRandomVelocity
			DataOut = energy
			ValueType = Float
			Value = 1
			Name = "Random velocity"
			Enabled = true
			UpdateAfterInit = false
			LocationIn = location
			LocationOut = location
			VelocityOut = velocity
			Speed
			{
				Min = 10
				Max = 20
			}
			Direction
			{
				Min = 0d
				Max = 360d
			}
		}
		{
			Type = LocationToWorldSpace
			LocationIn = location
			LocationOut = location
			Name = "Convert location to world space."
			Enabled = true
			UpdateAfterInit = false
			RotationIn = rot
			RotationOut = rot
			VelocityInOut = velocity
			VelocityIn = velocity
			VelocityOut = velocity
		}
		{
			Type = VelocityToWorldSpace
			VelocityIn = velocity
			VelocityOut = velocity
			Name = "Convert velocity to world space"
			Enabled = true
			VelocityInOut = velocity
			RotationIn = rot
			RotationOut = rot
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 6
		}
		{
			Type = AddFrameOfReference
			Name = "Add frame of reference"
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 512
			}
			SpriteSize
			{
				X = 128
				Y = 128
			}
			SpriteCount = 7
			SpritesPerRow = 2
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Enabled = true
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 6
			VelocityInOut = velocity
		}
		{
			Type = SetRandom
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 512
			}
			SpriteSize
			{
				X = 128
				Y = 128
			}
			SpriteCount = 7
			SpritesPerRow = 2
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Name = "Sprite Index"
			Enabled = true
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 5
		}
		{
			Type = UvSprites
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
			Name = "Sprite UV Rect"
			Enabled = true
			UpdateAfterInit = false
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 512
			}
			SpriteSize
			{
				X = 128
				Y = 128
			}
			SpriteCount = 6
			SpritesPerRow = 2
			PixelOffset
			{
				X = 0
				Y = 0
			}
		}
		{
			Type = SetRandom
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
			Name = "Rotation"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			ColorOut = base_color
			HueRange
			{
				Min = 0
				Max = 0
			}
			SaturationRange
			{
				Min = 0
				Max = 0
			}
			ValueRange
			{
				Min = 0.25
				Max = 0.6
			}
			AlphaRange
			{
				Min = 0.4
				Max = 0.4
			}
			Name = "Rot Velocity"
			Enabled = true
			UpdateAfterInit = false
			DataOut = rot_vel
			ValueType = Angle
			FromValue = -1440d
			ToValue = 1440d
		}
	]
	Updaters
	[
		{
			Type = Lifetime
			EnergyInOut = energy
			Lifetime = 0.5
			Name = Lifetime
			Enabled = true
			UpdateAfterInit = false
			LifeInOut = life
		}
		{
			Type = Operator
			DataType = Vector2D
			AIn = location
			BIn = velocity
			ResultOut = location
			Operator = AddDt
			Name = "Apply velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Angle
			AIn = rot
			BIn = rot_vel
			ResultOut = rot
			Operator = AddDt
			Name = "Apply rot velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = ColorRamp
			LerpIn = life
			ColorOut = color
			Invert = false
			Colors
			[
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0
				}
			]
			Name = "Alpha ramp"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Renderer
	{
		Type = StandardQuadRenderer
		LocationIn = location
		ScaleIn
		RotationIn = rot
		ColorIn = color
		BaseSize
		{
			X = 4
			Y = 4
		}
		MaxScale = 1
		UVRect
		{
			X = 0
			Y = 0
			Width = 1
			Height = 1
		}
		Name = ""
		UvRectIn = uv_rect
	}
	Material
	{
		Texture
		{
			File = missile_emp_shrapnel.png
			FixTransparentColors = false
			PreMultiplyByAlpha = false
			MipLevels = 8
			SampleMode = Linear
		}
		TargetBlendMode
		{
			SourceRgbFactor = SourceAlpha
			DestRgbFactor = InverseSourceAlpha
			RgbOperator = Add
			SourceAlphaFactor = InverseDestAlpha
			DestAlphaFactor = One
			AlphaOperator = Add
			ChannelWriteMask
			[
				Red
				Green
				Blue
				Alpha
				All
			]
		}
		Color
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 1
		}
	}
	DeleteMode = KeepOrder
	UpdatedEmittedParticles = false
	EnableMultithreading = false
	InitCapacity = 256
}
EmitterDef
{
	EmitPerSecond = 0
	EmitPerOneShot = 6
	PreInitializers[]
	PostInitializers[]
	UpdatedEmittedParticles = false
}
Bucket = Upper1
Delay = 0
IgnoreIntensity = false
Sharing = Global
MinIntensity = 0
IsFancy = true
DontEmitWhenOffScreen = true
DontEmitWhenOffScreenSizeInflate = 3
PenetratingBucket
UseCustomShapeForOffScreenCheck = false
MaxEmissionZoom = 3.40282347E+38
ScaleEmissionWithIntensity = false
UnsharedRenderInWorldSpace = false
ScaleEmissionWithBeamLength = false
CaptureBackBuffer = false
