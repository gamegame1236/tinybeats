Part : /BASE_PART
{
	NameKey = "Parts/MineFactoryTiny"
	IconNameKey = "Parts/MineFactoryTinyIcon"
	ID = Gray.mine_factory_tiny // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Parts"
	DescriptionKey = "Parts/MineFactoryTinyDesc"
	Cost = 7500
	Size = [1, 1]
	SelectionPriority = 1
	MaxHealth = 4000
	TypeCategories = [provides_mines, provides_launcher_parts, uses_power, uses_ammo]
	ReceivableBuffs = [Factory]
	AllowedDoorLocations
	[
		[-1, 1]
		[0, 1]
		[0, 2]
		[2, 1]
		[1, 1]
		[2, 0]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 24]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}
		ExpectedAmmoGenerationToggle
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, AmmoStorage]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		MinePieces
		{
			Type = AmmoStorage
			AmmoType = mine
			MaxAmmo = 4
			ToggleOnAmmo = 4
			ToggleOffAmmo = 3
		}

		MineStorage
		{
			Type = AmmoStorage
			AmmoType = mine
			MaxAmmo = 4
			SuppliesAmmo = true
			ExpectedAmmoGenerationRate = { BaseValue=(&../../MineBuilder/ToQuantity) / (&../../MineBuilder/Interval/BaseValue) / (&../../MineMover/FromQuantity); BuffType=Factory; BuffMode=Multiply; }
			ExpectedAmmoGenerationToggle = ExpectedAmmoGenerationToggle
		}

		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 2000
		}
		BatteryConsumer
		{
			Type = AmmoConsumer
			AmmoType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Factory_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		AmmoStorage
		{
			Type = AmmoStorage
			AmmoType = bullet
			MaxAmmo = 12
			ToggleOnAmmo = 2
			ToggleOffAmmo = 1
		}
		AmmoConsumer
		{
			Type = AmmoConsumer
			AmmoType = bullet
			Storage = AmmoStorage
			DefaultPriority = &/PRIORITIES/Factory_Supply
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/AmmoDeliver
		}

		MineBuilder
		{
			Type = AmmoConverter
			OperationalToggle = IsOperational
			From
			[
				{
					Storage = BatteryStorage
					Quantity = 100
					MinQuantityForConversion = 1
				}
				{
					Storage = AmmoStorage
					Quantity = 1
				}
			]
			ToStorage = MinePieces
			ToQuantity = 1
			Interval = { BaseValue=.35; BuffType=Factory; BuffMode=Divide; }
		}

		MineMover
		{
			Type = AmmoConverter
			OperationalToggle = MinePieces
			FromStorage = MinePieces
			FromQuantity = 4
			ToStorage = MineStorage
			ToQuantity = 1
			Interval = { BaseValue=.25; BuffType=Factory; BuffMode=Divide; }
		}

		BuildEffects
		{
			Type = TriggeredEffects
			Trigger = MineBuilder
			Location = [2, 1.5]
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "../ammo_factory/bullet_create.wav"
					Volume = .1
					Speed = .5
					SpeedVariation = .05
				}
			]
		}

		BuffProvider
		{
			Type = GridBuffProvider
			BuffType = Factory
			BuffAmount = 25%
			GridDistance = 1
			OperationalToggle = IsOperational
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			AnimationToggle = MineBuilder
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
					{
						File = "floor_33.png"
						Size = [1, 1]
					}
					{
						File = "floor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				Offset = [0, -.25]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [.75, .5]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				Offset = [0, -.25]
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [.75, .5]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				Offset = [0, .25]
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_66.png"
						Size = [1, 1]
					}
				]
			}
			NonOperationalRoofWindows = &OperationalRoofWindows
		}

		BatterySprites
		{
			Type = AmmoSprites
			Location = [.5, .25]
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "batteries1.png"
					Size = [1, 1]
				}
				{
					File = "batteries2.png"
					Size = [1, 1]
				}
				{
					File = "batteries3.png"
					Size = [1, 1]
				}
				{
					File = "batteries4.png"
					Size = [1, 1]
				}
			]
		}

		AmmoSpritesLeft
		{
			Type = AmmoSprites
			Location = [.25, .5]
			AmmoStorage = AmmoStorage
			Layer = "doodads_low"
			RangeLow = 0
			RangeHigh = 24
			AmmoLevels
			[
				{
					File = "bullets1.png"
					Size = [.25, .5]
				}
				{
					File = "bullets2.png"
					Size = [.25, .5]
				}
				{
					File = "bullets3.png"
					Size = [.25, .5]
				}
				{
					File = "bullets4.png"
					Size = [.25, .5]
				}
				{
					File = "bullets5.png"
					Size = [.25, .5]
				}
				{
					File = "bullets6.png"
					Size = [.25, .5]
				}
				{
					File = "bullets7.png"
					Size = [.25, .5]
				}
				{
					File = "bullets8.png"
					Size = [.25, .5]
				}
				{
					File = "bullets9.png"
					Size = [.25, .5]
				}
				{
					File = "bullets10.png"
					Size = [.25, .5]
				}
				{
					File = "bullets11.png"
					Size = [.25, .5]
				}
				{
					File = "bullets12.png"
					Size = [.25, .5]
				}
			]
		}

		AmmoSpritesRight
		{
			Type = AmmoSprites
			Location = [.825, .25]
			AmmoStorage = AmmoStorage
			Layer = "doodads_low"
			RangeLow = 1
			RangeHigh = 25
			AmmoLevels
			[
				{
					File = "bullets1.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets2.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets3.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets4.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets5.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets6.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets7.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets8.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets9.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets10.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets11.png"
					Size = [.25, .5]
					MirrorU = true
				}
				{
					File = "bullets12.png"
					Size = [.25, .5]
					MirrorU = true
				}
			]
		}

		MinePieceSprites
		{
			Type = AmmoSprites
			Location = [.5, .25]
			AmmoStorage = MinePieces
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "mine25.png"
					Size = [.25, .25]
				}
				{
					File = "mine50.png"
					Size = [.25, .25]
				}
				{
					File = "mine75.png"
					Size = [.25, .25]
				}
				{
					File = "mine100.png"
					Size = [.25, .25]
				}
			]
		}

		MineSprites
		{
			Type = AmmoSprites
			Location = [.5, .72]
			AmmoStorage = MineStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "mines1.png"
					Size = [1, .5]
				}
				{
					File = "mines2.png"
					Size = [1, .5]
				}
				{
					File = "mines3.png"
					Size = [1, .5]
				}
				{
					File = "mines4.png"
					Size = [1, .5]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [.5, .325]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [.5, .325]

			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 6500
					Radius = 1.75
					Delay = .05
					FireChancePerNDamage = 100%
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 6000
					Radius = 1
					Delay = .05
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, .325]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [.75, .75]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [.75, .75]
					}
				}

				// Out of ammo.
				{
					Toggle = AmmoStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoAmmo
						Size = [.75, .75]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}

	Stats
	{
		PartsPerMine = &~/Part/Components/MinePieces/MaxAmmo
		MinePartInterval = ((&~/Part/Components/MineBuilder/Interval/BaseValue) * (&PartsPerMine) + (&~/Part/Components/MineMover/Interval/BaseValue)) / (&PartsPerMine)
		MineProduction = (&~/Part/Components/MineBuilder/ToQuantity) / (&MinePartInterval) / (&PartsPerMine)
		MineCapacity = (&~/Part/Components/MinePieces/MaxAmmo) / (&PartsPerMine) + (&~/Part/Components/MineStorage/MaxAmmo)
		PowerPerMine = (&~/Part/Components/MineBuilder/From/0/Quantity) / (&~/Part/Components/MineBuilder/ToQuantity) * (&PartsPerMine) / 1000
		PowerPerSecond = (&~/Part/Components/MineBuilder/From/0/Quantity) / (&MinePartInterval) / 1000
		MinePowerUsage = [&../PowerPerMine, &../PowerPerSecond]
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000
		AmmoPerMine = (&~/Part/Components/MineBuilder/From/1/Quantity) / (&~/Part/Components/MineBuilder/ToQuantity) * (&PartsPerMine)
		AmmoPerSecond = (&~/Part/Components/MineBuilder/From/1/Quantity) / (&MinePartInterval)
		MineAmmoUsage = [&../AmmoPerMine, &../AmmoPerSecond]
		AmmoCapacity = &~/Part/Components/AmmoStorage/MaxAmmo
		FactoryBuff = (&~/Part/Components/BuffProvider/BuffAmount) * 100

		RecPower = &PowerPerSecond
		RecAmmo = &AmmoPerSecond
		RecCrew = (&RecPower) * 4 + (&RecAmmo) * 2
	}
}
