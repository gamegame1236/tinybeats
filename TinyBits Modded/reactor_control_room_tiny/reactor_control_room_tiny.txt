Part : /BASE_PART
{
	NameKey = "Parts/ReactorControlRoomTiny"
	IconNameKey = "Parts/ReactorControlRoomTinyIcon"
	ID = Gray.reactor_control_room_tiny // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Parts"
	DescriptionKey = "Parts/ReactorControlRoomTinyDesc"
	Cost = 5000
	AIValueFactor = 10
	Size = [1, 1]
	SelectionPriority = 0
	MaxHealth = 3000
	IsContiguityOrigin = true
	CrewCapacity = 1
	TypeCategories = [command, uses_power, is_crewed, provides_crew]
	RequiresCategories = []
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}
	Components : ^/0/Components
	{
		CrewSource
		{
			Type = CrewSource
			Crew = 1
		}

		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 3000
			MaxAmmoPickUp = 1000
			StartingAmmo = &MaxAmmo
			SuppliesAmmo = true
			ToggleOnAmmo = 501
			ToggleOffAmmo = 500
			AssumeAlwaysHasAmmo = true
			WaitPerDistToNextClosest = .15
		}
		BatteryProducer
		{
			Type = AmmoConverter
			ToStorage = BatteryStorage
			ToQuantity = 750
			Interval = .35
		}

		PowerDrain
		{
			Type = AmmoConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity = 100
			MinFromQuantityForConversion = 1
			Interval = 120// Drains 1 power every minute.
		}

		AreaPowerProvider
		{	
			Type = TriggeredEffects
			Location = [0.5, 0.5]
			Trigger = MainTimer
			HitEffects
			[
				{
					Type = ExplosiveAmmoDrain
					AmmoType = battery
					TotalDrain = -750
					Radius = 1.75
					Falloff = 0
					Delay = 0
					Filter
					{
						Ships = true
						Shields = false			
						Friendlies = true
						Enemies = false
					}
				}
			]
		}

		MainTimer
		{
			Type = Timer
			Duration = .5
			AutoStart = true
			Repeats = true
		}
		CommandProvider
		{
			Type = CommandProvider
			OperationalToggle = IsOperational
		}

		Sensor
		{
			Type = Sensor
			OperationalToggle = IsOperational
			SightRadius = 320
		}

		CrewLocation
		{
			Type = CrewLocation
			Location = [0.5, 0.45]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			Priorities = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.5, 0.45]
			]
			CrewLocations
			[
				CrewLocation
			]
		}

		Graphics
		{
			Type = Graphics
			Location = [0.5, 0.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
					{
						File = "floor_33.png"
						Size = [1, 1]
					}
					{
						File = "floor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
							"doodads_on9.png"
							"doodads_on10.png"
							"doodads_on11.png"
							"doodads_on12.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.125
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_on.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_on_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_on_66.png"
						Size = [1, 1]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_off.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_off_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_off_66.png"
						Size = [1, 1]
					}
				]
			}
		}

		BatterySprites
		{
			Type = AmmoSprites
			Location = [0.5, 0.8]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "reactor0.png"
					Size = [.35, .35]
				}
				{
					File = "reactor1.png"
					Size = [.35, .35]
				}
				{
					File = "reactor2.png"
					Size = [.35, .35]
				}
				{
					File = "reactor3.png"
					Size = [.35, .35]
				}
				{
					File = "reactor4.png"
					Size = [.35, .35]
				}
				{
					File = "reactor5.png"
					Size = [.35, .35]
				}
				{
					File = "reactor6.png"
					Size = [.35, .35]
				}
				{
					File = "reactor7.png"
					Size = [.35, .35]
				}
				{
					File = "reactor8.png"
					Size = [.35, .35]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [0.5, 0.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [0.5, 0.5]
			
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 4500
					Radius = 3.5
				}
			]
		}

		OperationSoundLoop
		{
			Type = ContinuousEffects
			Location = [0.5, 0.5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "operating.wav"
					Volume = .15
					MaxConcurrentVolume = .3
					Speed = .75
					MaxConcurrent = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}
				
				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000
		SensorRange = &~/Part/Components/Sensor/SightRadius

		RecCrew = (&CrewRequired)
	}
}
