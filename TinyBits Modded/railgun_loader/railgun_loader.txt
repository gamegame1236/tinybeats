Part : /BASE_PART
{
	NameKey = "Parts/RailgunLoaderTiny"
	IconNameKey = "Parts/RailgunLoaderTinyIcon"
	ID = Gray.railgun_loader_tiny // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "AmmoWeapons"
	DescriptionKey = "Parts/RailgunLoaderTinyDesc"
	Cost = 6250
	Size = [1, 1]
	Density = 2
	SelectionTypeID = "railgun"
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 6000
	TypeCategories = [weapon, uses_ammo, is_crewed, railgun, railgun_ammo]
	ReceivableBuffs = [RailgunReverseOperation]
	AllowedDoorLocations
	[
		[-1, 0]
		[1, 0]
		[0, 1]
		[0, -1]
		[1, 1]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [46, 69]
	}
	Components : ^/0/Components
	{
		BuffOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle]
			Mode = All
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles = [BuffOperational, RailgunReverseOperationBuffToggle]
			Mode = All
		}

		RailgunReverseOperationBuffToggle
		{
			Type = BuffToggle
			BuffType = RailgunReverseOperation
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		LoadedAmmo
		{
			Type = AmmoStorage
			AmmoType = bullet
			MaxAmmo = 6
			DelayBeforeReadyToUse = .25
			AnticipateMoreAmmoFrom = [AmmoStorage]
			ToggleOnAmmo = 6
			ToggleOffAmmo = 5
		}

		AmmoStorage
		{
			Type = AmmoStorage
			AmmoType = bullet
			MaxAmmo = 6
			ToggleOnAmmo = 6
			ToggleOffAmmo = 5
		}
		AmmoConsumer
		{
			Type = AmmoConsumer
			AmmoType = bullet
			Storage = AmmoStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			AdditionalStorageForJobPriority = [LoadedAmmo]
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/AmmoDeliver
		}

		AmmoPrereq
		{
			Type = MultiAmmoStorage
			AmmoType = bullet
			AmmoStorages = [LoadedAmmo, AmmoStorage]
			ToggleOnAmmo = 6
			ToggleOffAmmo = 5
		}

		RailgunBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = 0
			BuffArea = [0, -1, 1, 1]
			Criteria
			{
				Rot = 0
				Left = 0
				Right = 1
				Bottom = 0
			}
		}

		OperationBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = RailgunOperation
			BuffArea = [0, -1, 1, 1]
			OperationalToggle = BuffOperational
			Criteria
			{
				Rot = 0
				Left = 0
				Right = 1
				Bottom = 0
			}
		}

		AmmoLoader
		{
			Type = AmmoConverter
			FromStorage = AmmoStorage
			ToStorage = LoadedAmmo
			FromQuantity = 1
			ToQuantity = 1
			Interval = .15
		}

		LoadEffects
		{
			Type = TriggeredEffects
			Trigger = AmmoLoader
			MediaEffects = &/COMMON_EFFECTS/AmmoLoad
		}

		WeaponTrigger
		{
			Type = TriggerProxy
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = railgun_power
				Rot = 0
				Left = 0
				Right = 1
				Bottom = 0
			}
			ComponentID = Weapon
		}

		EmitTrigger
		{
			Type = TriggerProxy
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = railgun_power
				Rot = 0
				Left = 0
				Right = 1
				Bottom = 0
			}
			ComponentID = BulletEmitter
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [.5, .9]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [AmmoPrereq]
			CrewDestinations
			[
				[.5, .9]

			]
			CrewLocations
			[
				CrewLocation1
			]
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
					{
						File = "floor_33.png"
						Size = [1, 1]
					}
					{
						File = "floor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.1
						AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "weapons"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, -.25]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads_on1.png"
							"roof_doodads_on2.png"
							"roof_doodads_on3.png"
							"roof_doodads_on4.png"
							"roof_doodads_on5.png"
							"roof_doodads_on6.png"
						]
						Size = [1, .1]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, -.25]
				DamageLevels
				[
					{
						File = "roof_doodads_off.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				Offset = [0, .25]
				DamageLevels
				[
					{
						File = "roof_windows_on.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_on_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_on_66.png"
						Size = [1, 1]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				Offset = [0, .25]
				DamageLevels
				[
					{
						File = "roof_windows_off.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_off_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_windows_off_66.png"
						Size = [1, 1]
					}
				]
			}
		}

		AmmoHideToggle
		{
			Type = TriggeredToggle
			OnTrigger = WeaponTrigger
			OffTrigger = EmitTrigger
			OperationalToggle = IsOperational
		}
		ToggledLoadedAmmoSprites
		{
			Type = ToggledComponents
			Toggle = AmmoHideToggle
			Invert = true
			Components
			{
				LoadedAmmoSprites
				{
					Type = AmmoSprites
					Location = [.5, .75]
					AmmoStorage = LoadedAmmo
					Layer = "doodads_low"
					AmmoLevels
					[
						{
							File = "bullets1.png"
							Size = [1, 1.5]
						}
						{
							File = "bullets2.png"
							Size = [1, 1.5]
						}
						{
							File = "bullets3.png"
							Size = [1, 1.5]
						}
						{
							File = "bullets4.png"
							Size = [1, 1.5]
						}
						{
							File = "bullets5.png"
							Size = [1, 1.5]
						}
						{
							File = "bullets6.png"
							Size = [1, 1.5]
						}
					]
				}
			}
		}

		AmmoSprites
		{
			Type = AmmoSprites
			Location = [.5, .75]
			AmmoStorage = AmmoStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "bullets7.png"
					Size = [1, .5]
				}
				{
					File = "bullets8.png"
					Size = [1, .5]
				}
				{
					File = "bullets9.png"
					Size = [1, .5]
				}
				{
					File = "bullets10.png"
					Size = [1, .5]
				}
				{
					File = "bullets11.png"
					Size = [1, .5]
				}
				{
					File = "bullets12.png"
					Size = [1, .5]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [.5, .5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [.5, .5]

			FactorHitEffectsWith = AmmoPrereq
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 12500
					Radius = 2.5
					Delay = .05
					FireChancePerNDamage = 50%
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 4000
					Radius = 2
					Delay = .05
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}

		RecursiveDeath
		{
			Type = DeathEffects
			Location = [.5, -.25]

			HitEffects
			[
				{
					Type = AreaDamage
					Damage = 2000
					Radius = .6
					Falloff = 0
					Delay = .15
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
			]
		}

		FireEffect
		{
			Type = TriggeredEffects
			Trigger = WeaponTrigger
			Location = [.5, .5]

			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "shoot.wav"
					Volume = 2
					SpeedVariation = .25
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, .75]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [.5, .5]
					}
				}

				// Out of ammo.
				{
					Toggle = AmmoPrereq
					Delay = &<../railgun_launcher/railgun_launcher.txt>/Part/Components/Weapon/FireInterval
					AtlasSprite
					{
						File = &/INDICATORS/NoAmmo
						Size = [.75, .75]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [.75, .75]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		AmmoCapacity = (&~/Part/Components/AmmoStorage/MaxAmmo) + (&~/Part/Components/LoadedAmmo/MaxAmmo)

		RecAmmo = &../StatsByCategory/0/Stats/AmmoPerSecond
		RecCrew = (&CrewRequired) + (&RecAmmo) * 2
	}

	StatsByCategory = &<../railgun_launcher/railgun_launcher.txt>/Part/StatsByCategory
	StatsNotesKey = "Stats/RailgunNotes"
}
